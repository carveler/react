[{"/Users/mamikurokawa/Documents/react/eu_product/src/index.js":"1","/Users/mamikurokawa/Documents/react/eu_product/src/App.js":"2","/Users/mamikurokawa/Documents/react/eu_product/src/components/Header.js":"3","/Users/mamikurokawa/Documents/react/eu_product/src/components/Footer.js":"4","/Users/mamikurokawa/Documents/react/eu_product/src/hooks/useFetch.js":"5","/Users/mamikurokawa/Documents/react/eu_product/src/components/Form.js":"6","/Users/mamikurokawa/Documents/react/eu_product/src/reducers/postReducer.js":"7","/Users/mamikurokawa/Documents/react/eu_product/src/const/initialValues.js":"8","/Users/mamikurokawa/Documents/react/eu_product/src/const/actions.js":"9"},{"size":146,"mtime":1612020340188,"results":"10","hashOfConfig":"11"},{"size":1795,"mtime":1612027076745,"results":"12","hashOfConfig":"11"},{"size":226,"mtime":1611950772943,"results":"13","hashOfConfig":"11"},{"size":315,"mtime":1611949451259,"results":"14","hashOfConfig":"11"},{"size":779,"mtime":1611953295462,"results":"15","hashOfConfig":"11"},{"size":8722,"mtime":1612090049857,"results":"16","hashOfConfig":"11"},{"size":708,"mtime":1612024851340,"results":"17","hashOfConfig":"11"},{"size":222,"mtime":1612027312008,"results":"18","hashOfConfig":"11"},{"size":226,"mtime":1612024965189,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"fl77wv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/mamikurokawa/Documents/react/eu_product/src/index.js",[],["43","44"],"/Users/mamikurokawa/Documents/react/eu_product/src/App.js",["45","46","47","48","49","50"],"import React, { useState, useReducer } from 'react';\nimport Header from './components/Header';\n// import BarcodeInput from './components/BarcodeInput';\nimport { useFetch } from './hooks/useFetch';\nimport { initialValues } from './const/initialValues';\nimport Form from './components/Form';\nimport { ACTIONS } from './const/actions';\n\n// import postReducer from './reducers/postReducer';\nimport Footer from './components/Footer';\nimport './css/App.css';\n\nfunction App() {\n  ///input form\n  // const [inputFormData, setInputFormData] = useState(initialValues);\n\n  ///store input form Product\n  // const [products, setProducts] = useState([]);\n\n  ///barcode Submit true/false\n  const [barcodeSubmitStatus, setBarcodeSubmitStatus] = useState(false);\n  // const url = `https://world.openfoodfacts.org/api/v0/product/${barcode}.json`;\n  // const { data, loading, error } = useFetch(url);\n\n  // const inputChangeHandler = (e) => {\n  //   e.preventDefault();\n  //   const name = e.target.name;\n  //   const value = e.target.value;\n  //   if (name) {\n  //     setInputFormData((prevInputFormData) => ({\n  //       ...prevInputFormData,\n  //       [name]: value,\n  //       id: prevInputFormData.barcode,\n  //     }));\n\n  //     // dispatch({\n  //     //   type: \"ACTION_INPUT_CHANGE\",\n  //     //   payload: { [e.target.name]: e.target.value }\n  //     // });\n  //     // setError('');\n  //   } else {\n  //     // setError('正しく入力してください');\n  //   }\n  // };\n  return (\n    <div className='App'>\n      <Header />\n      {/* <BarcodeInput\n        // inputChangeHandler={inputChangeHandler}\n        setBarcodeSubmitStatus={setBarcodeSubmitStatus}\n      /> */}\n      {/* {barcodeSubmitStatus && ( */}\n      <Form />\n      {/* )} */}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mamikurokawa/Documents/react/eu_product/src/components/Header.js",[],"/Users/mamikurokawa/Documents/react/eu_product/src/components/Footer.js",[],"/Users/mamikurokawa/Documents/react/eu_product/src/hooks/useFetch.js",[],["51","52"],"/Users/mamikurokawa/Documents/react/eu_product/src/components/Form.js",["53","54"],"import React, { useReducer, useState } from 'react';\nimport { ACTIONS } from '../const/actions';\nimport { initialValues } from '../const/initialValues';\nconst postReducer = (products, action) => {\n  console.log('action.payload', action.payload);\n  console.log('action', action);\n  console.log(products);\n  switch (action.type) {\n    case ACTIONS.INPUT_CHANGE:\n      return [{ ...action.payload }];\n    // return action.ingredients;\n\n    case ACTIONS.ADD_PRODUCTS:\n      return [...products, { ...action.payload }];\n    default:\n      return products;\n  }\n};\n// return [\n//   ...todos,\n//   { id: uuidv4(), title: action.payload.title, complete: false },\n// ];\nexport default function Form() {\n  const [barcodeSubmitStatus, setBarcodeSubmitStatus] = useState(false);\n  const [formTextData, setFormTextData] = useState(initialValues);\n  const [posts, setPosts] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const [products, dispatch] = useReducer(postReducer, [initialValues]);\n  const {\n    id,\n    barcode,\n    poductname,\n    poductname_jp,\n    brand,\n    store,\n    price,\n    country,\n    rating,\n    comment,\n    img,\n    // barcodeSubmitStatus,\n  } = products;\n\n  const inputChangeHandler = (e) => {\n    console.log(e.target.name);\n    console.log(e.target.value);\n    dispatch({\n      type: ACTIONS.INPUT_CHANGE,\n      payload: formTextData,\n    });\n    // dispatch({\n    //   type: ACTIONS.INPUT_CHANGE,\n    //   payload: { [e.target.name]: e.target.value },\n    // });\n\n    // dispatch({ type: 'SET', ingredients: filteredIngredients });\n\n    setFormTextData((prevFormTextData) => ({\n      ...prevFormTextData,\n      id: formTextData.barcode,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  console.log(formTextData);\n  //   dispatch({\n  //     type: ADD_TODO,\n  //     payload: { title: titleRef.current.value, priority },\n  //   });\n  //   titleRef.current.value = '';\n  // };\n\n  const barcodeSubmit = (e) => {\n    e.preventDefault();\n    setBarcodeSubmitStatus(true);\n  };\n\n  const handlePostSubmit = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    e.preventDefault();\n    dispatch({\n      type: ACTIONS.ADD_PRODUCTS,\n      payload: { [name]: value },\n    });\n    setPosts((prevPosts) => [...prevPosts, formTextData]);\n    setBarcodeSubmitStatus(false);\n    e.target.value = '';\n    setFormTextData([initialValues]);\n  };\n  console.log('posts', posts);\n  // const submit = (e) => {\n  //   e.preventDefault();\n  //   console.log(titleRef.current.value);\n  //   dispatch({\n  //     type: ACTIONS.ADD_TODO,\n  //     payload: { title: titleRef.current.value },\n  //   });\n  //   titleRef.current.value = '';\n  // };\n  const editPostChangeHandler = (e) => {\n    setFormTextData((prevFormTextData) => [\n      ...prevFormTextData,\n      { poductname: e.target.value },\n    ]);\n  };\n  const editPostSubmitHandler = (e) => {\n    e.preventDefault();\n    setEditing(false);\n  };\n  return (\n    <div className='form_container'>\n      <section className='barcode_input_container'>\n        <form onSubmit={barcodeSubmit}>\n          <input\n            type='number'\n            placeholder='バーコードを入力してください'\n            value={barcode}\n            // onChange={(e) =>\n            //   dispatch({\n            //     type: 'ACTIONS.INPUT_CHANGE',\n            //     fieldName: 'barcode',\n            //     payload: e.currentTarget.value,\n            //   })\n            // }\n            name='barcode'\n            onChange={inputChangeHandler}\n            required\n          />\n          　　　　\n          <button type='submit'>レビューを追加する</button>\n        </form>\n        {/* {error && <div>{error}</div>} */}\n      </section>\n      {barcodeSubmitStatus && (\n        <section className='review_form_container'>\n          <form className='review_form' onSubmit={handlePostSubmit}>\n            <section className='review_form_input'>\n              <input\n                type='text'\n                placeholder='商品名を(現地語）を入力してください'\n                value={poductname}\n                // onChange={(e) =>\n                //   dispatch({\n                //     type: ACTIONS.INPUT_CHANGE,\n                //     fieldName: 'poductname',\n                //     payload: e.currentTarget.value,\n                //   })\n                // }\n                name='poductname'\n                onChange={inputChangeHandler}\n                required\n              />\n              <input\n                type='text'\n                placeholder='商品名（日本語）を入力してください'\n                value={poductname_jp}\n                // onChange={(e) =>\n                //   dispatch({\n                //     type: ACTIONS.INPUT_CHANGE,\n                //     fieldName: 'poductname_jp',\n                //     payload: e.currentTarget.value,\n                //   })\n                // }\n                name='poductname_jp'\n                onChange={inputChangeHandler}\n                required\n              />\n\n              <input\n                type='text'\n                placeholder='ブランド'\n                value={brand}\n                // onChange={(e) =>\n                //   dispatch({\n                //     type: ACTIONS.INPUT_CHANGE,\n                //     fieldName: 'brand',\n                //     payload: e.currentTarget.value,\n                //   })\n                // }\n                name='brand'\n                onChange={inputChangeHandler}\n              />\n\n              <input\n                type='text'\n                placeholder='値段'\n                value={price}\n                // onChange={(e) =>\n                //   dispatch({\n                //     type: ACTIONS.INPUT_CHANGE,\n                //     fieldName: 'price',\n                //     payload: e.currentTarget.value,\n                //   })\n                // }\n                name='price'\n                onChange={inputChangeHandler}\n              />\n\n              <input\n                type='text'\n                placeholder='買える店'\n                value={store}\n                // onChange={(e) =>\n                //   dispatch({\n                //     type: ACTIONS.INPUT_CHANGE,\n                //     fieldName: 'store',\n                //     payload: e.currentTarget.value,\n                //   })\n                // }\n                name='store'\n                onChange={inputChangeHandler}\n              />\n\n              <input\n                type='text'\n                placeholder='国'\n                value={country}\n                // onChange={(e) =>\n                //   dispatch({\n                //     type: ACTIONS.INPUT_CHANGE,\n                //     fieldName: 'country',\n                //     payload: e.currentTarget.value,\n                //   })\n                // }\n                name='country'\n                onChange={inputChangeHandler}\n              />\n              <input\n                type='text'\n                value={rating}\n                // onChange={(e) =>\n                //   dispatch({\n                //     type: ACTIONS.INPUT_CHANGE,\n                //     fieldName: 'rating',\n                //     payload: e.currentTarget.value,\n                //   })\n                // }\n                name='rating'\n                onChange={inputChangeHandler}\n              />\n              <input\n                type='text'\n                value={comment}\n                placeholder='コメント'\n                // onChange={(e) =>\n                //   dispatch({\n                //     type: ACTIONS.INPUT_CHANGE,\n                //     fieldName: 'comment',\n                //     payload: e.currentTarget.value,\n                //   })\n                // }\n                name='comment'\n                onChange={inputChangeHandler}\n              />\n\n              {/* <div className='image_upload_container'>\n            <UploadImage />\n          </div> */}\n              <button type='submit'>レビューを投稿する</button>\n            </section>\n          </form>\n        </section>\n      )}\n      <section className='post_container'>\n        <ul>\n          {posts.map((post) => (\n            <li key={post.barcode}>\n              {post.poductname}{' '}\n              <button onClick={(e) => setEditing(true)}>edit</button>\n            </li>\n          ))}\n        </ul>\n      </section>\n      {editing && (\n        <section className='edit_container'>\n          <p>edit {poductname} </p>\n          <input onChange={editPostChangeHandler}></input>\n          <button>cancle</button>\n          <button onClick={editPostSubmitHandler}>save</button>\n        </section>\n      )}\n    </div>\n  );\n}\n","/Users/mamikurokawa/Documents/react/eu_product/src/reducers/postReducer.js",[],["55","56"],"/Users/mamikurokawa/Documents/react/eu_product/src/const/initialValues.js",[],"/Users/mamikurokawa/Documents/react/eu_product/src/const/actions.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":37},{"ruleId":"61","severity":1,"message":"65","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":18},{"ruleId":"61","severity":1,"message":"66","line":5,"column":10,"nodeType":"63","messageId":"64","endLine":5,"endColumn":23},{"ruleId":"61","severity":1,"message":"67","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":17},{"ruleId":"61","severity":1,"message":"68","line":21,"column":10,"nodeType":"63","messageId":"64","endLine":21,"endColumn":29},{"ruleId":"61","severity":1,"message":"69","line":21,"column":31,"nodeType":"63","messageId":"64","endLine":21,"endColumn":53},{"ruleId":"57","replacedBy":"70"},{"ruleId":"59","replacedBy":"71"},{"ruleId":"61","severity":1,"message":"72","line":30,"column":5,"nodeType":"63","messageId":"64","endLine":30,"endColumn":7},{"ruleId":"61","severity":1,"message":"73","line":40,"column":5,"nodeType":"63","messageId":"64","endLine":40,"endColumn":8},{"ruleId":"57","replacedBy":"74"},{"ruleId":"59","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'useFetch' is defined but never used.","'initialValues' is defined but never used.","'ACTIONS' is defined but never used.","'barcodeSubmitStatus' is assigned a value but never used.","'setBarcodeSubmitStatus' is assigned a value but never used.",["76"],["77"],"'id' is assigned a value but never used.","'img' is assigned a value but never used.",["76"],["77"],"no-global-assign","no-unsafe-negation"]