{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mamikurokawa/Documents/react/react-complete-guide/1/src/App2.js\";\nimport React, { Component } from 'react';\nimport UserOutput from './ex/UserOutput';\nimport './App.css';\nimport UserInput from './ex/UserInput';\n\nclass App extends Component {\n  render() {\n    const inputText = '';\n\n    const handleChange = event => {\n      inputText = event.target.value;\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(UserOutput, {\n        name: inputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n        onChange: () => handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [\"Add a method to manipulate the state (=> an event-handler method)\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Pass the event-handler method reference to the UserInput component and bind it to the input-change event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Ensure that the new input entered by the user overwrites the old username passed to UserOutput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Add two-way-binding to your input (in UserInput) to also display the starting username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App2;","map":{"version":3,"sources":["/Users/mamikurokawa/Documents/react/react-complete-guide/1/src/App2.js"],"names":["React","Component","UserOutput","UserInput","App","render","inputText","handleChange","event","target","value","App2"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,EAAlB;;AACA,UAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BF,MAAAA,SAAS,GAAGE,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACD,KAFD;;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,MAAMC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,qGAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AA/ByB;;AAkC5B,eAAeI,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport UserOutput from './ex/UserOutput';\nimport './App.css';\nimport UserInput from './ex/UserInput';\n\nclass App extends Component {\n  render() {\n    const inputText = '';\n    const handleChange = (event) => {\n      inputText = event.target.value;\n    };\n    return (\n      <div className='App'>\n        <UserOutput name={inputText} />\n        <UserInput onChange={() => handleChange} />\n        <ol>\n          Add a method to manipulate the state (=> an event-handler method)\n          <li>\n            Pass the event-handler method reference to the UserInput component\n            and bind it to the input-change event\n          </li>\n          <li>\n            Ensure that the new input entered by the user overwrites the old\n            username passed to UserOutput\n          </li>\n          <li>\n            Add two-way-binding to your input (in UserInput) to also display the\n            starting username\n          </li>\n          <li>\n            Add styling of your choice to your components/ elements in the\n            components - both with inline styles and stylesheets\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default App2;\n"]},"metadata":{},"sourceType":"module"}