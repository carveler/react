{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mamikurokawa/Documents/react/react-complete-guide/1/src/App2.js\";\nimport React, { Component } from 'react';\nimport UserOutput from './ex/UserOutput';\nimport './App.css'; // import UserInput from './ex/UserInput';\n\nfunction App2() {\n  // let userName = { name: 'Mami' };\n  // const handleChange = (event) => {\n  //   userName = { name: event.target.value };\n  // };\n  // return (\n  //   <div className='App'>\n  //     <UserOutput name={userName.name} />\n  //     <input type='text' onChange={handleChange} />\n  //     <ol>\n  //       Add a method to manipulate the state (=> an event-handler method)\n  //       <li>\n  //         Pass the event-handler method reference to the UserInput component and\n  //         bind it to the input-change event\n  //       </li>\n  //       <li>\n  //         Ensure that the new input entered by the user overwrites the old\n  //         username passed to UserOutput\n  //       </li>\n  //       <li>\n  //         Add two-way-binding to your input (in UserInput) to also display the\n  //         starting username\n  //       </li>\n  //       <li>\n  //         Add styling of your choice to your components/ elements in the\n  //         components - both with inline styles and stylesheets\n  //       </li>\n  //     </ol>\n  //   </div>\n  // );\n  function handleChange(event) {\n    // when passing the function to an event handler, like onChange // we get access to data about the event (an object)\n    const inputText = event.target.value;\n    const inputName = event.target.name; // myInput\n    // we get the text typed in and other data from event.target }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    name: \"myInput\",\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n}\n\n_c = App2;\nexport default App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"sources":["/Users/mamikurokawa/Documents/react/react-complete-guide/1/src/App2.js"],"names":["React","Component","UserOutput","App2","handleChange","event","inputText","target","value","inputName","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAO,WAAP,C,CACA;;AAEA,SAASC,IAAT,GAAgB;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AACA,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA/B;AACA,UAAMC,SAAS,GAAGJ,KAAK,CAACE,MAAN,CAAaG,IAA/B,CAH2B,CAGU;AACrC;AACD;;AACD,sBAAO;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,SAAxB;AAAkC,IAAA,QAAQ,EAAEN;AAA5C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAtCQD,I;AAwCT,eAAeA,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport UserOutput from './ex/UserOutput';\nimport './App.css';\n// import UserInput from './ex/UserInput';\n\nfunction App2() {\n  // let userName = { name: 'Mami' };\n  // const handleChange = (event) => {\n  //   userName = { name: event.target.value };\n  // };\n  // return (\n  //   <div className='App'>\n  //     <UserOutput name={userName.name} />\n  //     <input type='text' onChange={handleChange} />\n  //     <ol>\n  //       Add a method to manipulate the state (=> an event-handler method)\n  //       <li>\n  //         Pass the event-handler method reference to the UserInput component and\n  //         bind it to the input-change event\n  //       </li>\n  //       <li>\n  //         Ensure that the new input entered by the user overwrites the old\n  //         username passed to UserOutput\n  //       </li>\n  //       <li>\n  //         Add two-way-binding to your input (in UserInput) to also display the\n  //         starting username\n  //       </li>\n  //       <li>\n  //         Add styling of your choice to your components/ elements in the\n  //         components - both with inline styles and stylesheets\n  //       </li>\n  //     </ol>\n  //   </div>\n  // );\n\n  function handleChange(event) {\n    // when passing the function to an event handler, like onChange // we get access to data about the event (an object)\n    const inputText = event.target.value;\n    const inputName = event.target.name; // myInput\n    // we get the text typed in and other data from event.target }\n  }\n  return <input type='text' name='myInput' onChange={handleChange} />;\n}\n\nexport default App2;\n"]},"metadata":{},"sourceType":"module"}